// Busca Linear 
// Não precisa estar ordenado. A única.

// Busca binária
// Precisa estar ordenada.
// Divide no meio e compara. Se for menor vai pra esquerda e se não for vai pra direita até encontrar. 

// Busca Ternária.

// Busca por Interpolação.

// Select Sort
// selecionar o que vai ordenar, sempre vai buscar o menor valor, e vai deixar o menor na primeira posição.
// A medida que ele for encontrando um menor, ele vai trocando. 
// COMPARA A POSIÇÃO ATÉ O FINAL.

// Quick Select
// Pivô pra iniciar === No exemplo foi 5 que era a última posição do vetor
// dividiu 3142 5 6897
// No final, não precisa estar ordenado.

// Heap Sort
// Árvore Heap
// Cada nó pode gerar no máximo dois filhos
// Só pode uma troca por vez.

// Bubble Sort
// Comparação em bolha
// Começa do primeiro e vai comparando, 7 compara com o 6 , é maior é vai pra direita, compara com o quatro, até o final
// Depois compara de novo.
// Quando já houve a comparação, não precisa comparar de novo

// Merge Sort
// Mesclagem
// Vai dividir a lista em duas, subjconjuntos e depois vai mesclar pra ter um vetor ordenado.
// 4260
// 42    60
// 4 2   6 0
// 24    06
// 0246 


// Insert Sort
// Começar do primeiro e vai comparar e depois o número vai ser inserido.
// Insere de forma lógica.

// Quick Sort
// Ordenação rápida
// 7 9 11 5 6
// Pivô = 6
// O que for menor vai pra direita 
/// 5 6 11 7 9
//  5    11 7 9
//       7  9 11



